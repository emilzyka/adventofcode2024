namespace AdventCode2024.Days;

internal class Day6
{
    //string input = "....#.....\r\n.........#\r\n..........\r\n..#.......\r\n.......#..\r\n..........\r\n.#..^.....\r\n........#.\r\n#.........\r\n......#...";
    string input = "................................##..........................................................................#.......#.............\r\n...#.......................................................................................................#......................\r\n.#.....................#.............................................#................#..................#...#..#.#..#...#........\r\n.#........................#....#.#.#..........................................#...............................................#...\r\n..................#.......................................................#.......#.............#.................................\r\n........................................#...................................#.........#......#...............#......#......#......\r\n......#...#.......#..............#.....#..#....................#.................................................#......#.........\r\n......................#...................#....#....................................#.#........................#.........#...#....\r\n....................#..........................................................................................#..................\r\n..#.........................#.............#...............#.......................................................................\r\n.#...............................#...............................#...#................#.........#......................#..........\r\n...#.....................................#.........#.............#...................#.......#........................#......#....\r\n#...........................#............................#.............................#........................................#.\r\n.........................#................#...........#..........................#.#..............................................\r\n...........#.#.......#...#.............#.................................#............................................#...#.......\r\n....#.......................#.......#..........#....................................#...............................#.#..#........\r\n....#............#.......#.............................#..................#......#......#..............#.............#.....#.#....\r\n...................................#..............#............#...#..............................................#...............\r\n..............................#....#.#........#......................#...................#........#..#............................\r\n....................................#.#....#.............................................#....#......#...................#........\r\n..................##..................#........#.....#.........................................#.......#............#.............\r\n.............#......................................................##...................................................#......#.\r\n#......#................#.......................##...............#.....#.......................#..#.........#.............#...#...\r\n.............................................................................................................#.....#..............\r\n.......#..........#...............#.....##......#.......#.................#............#..........................................\r\n.......#.............#.........................................................#................................................#.\r\n...........#.......................#.....#...............#..............#........#.....#.........#.........................#......\r\n.........#........#...............#................................................................#......#..........#............\r\n..............#..................#...#...............................#.#.................................#.............#........#.\r\n.....................#.......#..............................#........................#...........#....#.................#.......#.\r\n..........#..................................#......#..#................##.........................................#..........#...\r\n.....................#.....#.........#.....#...............#..........................................#.........................#.\r\n..........#...#..............................#...................#.........#........................................#.............\r\n.......#.........................................................................#..........#............#..#..........#..........\r\n.....#..#..#...............#....................#..............#...........#.....#.....................#..........................\r\n................................................#.............................................................................#...\r\n................#.......................................................................................#.........................\r\n.............#...#.......................#..................................................#....#................................\r\n...............................#.......#.#.............................................#....................#....#................\r\n......#....................................................#.......#......#.................................................#.....\r\n...........................................................#..........................#.#.....#................#.................#\r\n....#....#............#.........................#..#.........................#..................#......#...#.........##...........\r\n...#..................#................................#......#.............#.#............................#......................\r\n..........................#.............................................................................##........................\r\n..............................................................................#.................#..........##.....................\r\n....#.....................#.................#......................#...........#.........................................#........\r\n..................................#..#....#.................................................................#............#.....#.#\r\n.#.........................#.........................#....................#......................................#................\r\n................##...........................#....................................................................................\r\n.........#........................................#...........................#........#.........#.......#......#.......#...#...#.\r\n.#..................................................................................#.........#..................................#\r\n....#...............#..........................#.....#....................................................#.......................\r\n.......................#.............................#......#...........^........#................................................\r\n#.#..#.....#...................##..........#...................................................................................#..\r\n..#....#.....................................................#...#.............#....#............#..#............................#\r\n........................#..........#.....#............#...........#...............#............#....#.................#........#..\r\n.................................#.............#...#..................#................................................#..........\r\n...........#............................................................................#................#....................#...\r\n..#.........#.............................#............................#....................#....................#................\r\n.................................#..#................#................#...........................................................\r\n.......................#.......................................#........................#................#......#...........#.....\r\n#..............#.......#.........#...#.....#......#.....................#...#....#.......................................#........\r\n.........#.#.............................#....#.......#..........................................................#................\r\n...#............................................................................................#.................................\r\n....................#...................#....................#..............#......#..#.............#.............................\r\n...........#.....................................................##...............................................................\r\n.....#......#...............................................................................#........#...................#........\r\n..............................................#.............#....#................................................................\r\n......................#.....................#........................................................#...#.........#..#.....#.....\r\n..#...............................................................#..#....................#.#.....................................\r\n............................................#...............#.....#.....#...#..#..................................................\r\n.#...........................................................................#....................................................\r\n.............................................................................................................#....................\r\n#....................................................#..............##.......................................#....................\r\n#..#....................#.......#...................................................................#...#.........................\r\n..#........................................#............#...............................................................#.........\r\n...............#...........................#...................#....#......#..................................#....#...........#.#\r\n..........##........#.........................#.......#..#.........#...............#........#........#..........#.................\r\n....##.......................................#...........#...................#......#.............................................\r\n..............................#.........#............................#.............................................#..............\r\n......#........#...........................#..................................#.....#.............................................\r\n...............#.........#.....#.............#.............#...............#.#...............................................#....\r\n........................................#...............................................................................##.#...#..\r\n................#.......#.....#........................................................................#........................#.\r\n....................................................................................#.........................................#...\r\n........................................................................................#...#.....................................\r\n........................#.#.........................................................................................#......#....##\r\n......#.........................#.............#...................................................................................\r\n................#...........................#..............#...#..........................#.......#......##.................#..#..\r\n....................................................#.#.................................#....#....................................\r\n#..................................#...............................................#......#.#.............#.......................\r\n.....#..........#.....................................................................................#.#.......#............#....\r\n..#.........................................................#...................#..................................#..###.#.....#.\r\n...#.#..........#.........#..#......................#..##...#.......#..#.#.#...............#.....#....#...........................\r\n...........#.....#...........#........................................................#..................#........................\r\n.................#........#.......#...................#...#.......#.....#........#..#.............................................\r\n...............................................#.......................#..................#.......................................\r\n....#...................#.#......#............#...................#..........#..##................................................\r\n....#........................#...........................................................#..................#..#.............#....\r\n............#...............................................#.....................................................................\r\n.........#.......#...................#...........#...............#....................#................#...#..#.......#...........\r\n...............#...........................................................................#.....................#................\r\n.............#....#.........................................................#............#....#.#....#.....#..#................#..\r\n..#...............#.........................................................#........##.....#...#.........................#.......\r\n..........................#.....................................#.................................#...............................\r\n..#.............#...#...............................#.................................................................##..........\r\n......#........#........................#..........................#..............................................#...............\r\n......#.........................#..#.............................................................................................#\r\n..................................................#..................#.....#...........#....#...#..........#................#.....\r\n....#.....................................#..........#.....#......#..........#....................................................\r\n...............................#...#...###.#.............................................................#...................#....\r\n...#...................................#.....#...#....................#........................#..#.......................#......#\r\n....#...#........#...................#..........#......................................#............#.............................\r\n#.................................#.....................#.................#................#...#.#................................\r\n.................................#.......#...........#..#...#......#.......#.........................#............................\r\n.......................................##..........................#..................................................#...........\r\n......#............#.##.........#...............#..........#....#.......................................#..#.................#....\r\n.....#............................#.....#..................................................#.......#......................#.......\r\n.............#.......................................................#...#...#....#...................#...........................\r\n......#.................#.#................................#..#...............#.............................#....#...........#....\r\n...............#...##......#.............................#.......................................#................................\r\n#..................................................#.........#....#....#.....#...................#.#....#.....#...................\r\n......#...#...##.................................................................#............................#...............#...\r\n.#..................................#.#...............#................................#...#......................................\r\n.........#.......#...#.......................#..................................................#.#................#..............\r\n..................#............................#.....#.....#........#.....................#........................#.......#..#...\r\n..#.............................#.............#.#................................................#.#.##....................#......\r\n.......#.#......................#.#.....................................................##.............#..........................\r\n..............#...#........................#................................#.........#.......................#..........#........\r\n.......................#...............................#..#.........#.............................................................";

    List<List<char>> InputToList(string input)
    {
        List<List<char>> output = [];
        string[] lines = input.Split(new[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries);

        foreach (var line in lines)
        {
            List<char> temp = [.. line];
            output.Add(temp);
        }
        return output;
    }

    // END INPUT

    // Part 1
    int MoveAndTrackDistincts(List<List<char>> l)
    {
        HashSet<(int, int)> distincts = []; // all pos

        (var x, var y) = GetStartPos(l); // start pos

        distincts.Add((x, y)); // add start pos 

        string direction = "UP"; // start dir

        bool isPresent = true;

        while (isPresent)
        {
            if (direction == "UP")
            {
                if (!IsStepInside(l, (x, y), direction)) break;

                if (l[(x - 1)][y] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    x -= 1;
                    if (!distincts.Contains((x, y))) distincts.Add((x, y));
                }
            }

            if (direction == "RIGHT")
            {
                if (!IsStepInside(l, (x, y), direction)) break;

                if (l[(x)][y + 1] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    y += 1;
                    if (!distincts.Contains((x, y))) distincts.Add((x, y));
                }
            }

            if (direction == "DOWN")
            {
                if (!IsStepInside(l, (x, y), direction)) break;


                if (l[(x + 1)][y] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    x += 1;
                    if (!distincts.Contains((x, y))) distincts.Add((x, y));
                }
            }

            if (direction == "LEFT")
            {
                if (!IsStepInside(l, (x, y), direction)) break;

                if (l[(x)][y - 1] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    y -= 1;
                    if (!distincts.Contains((x, y))) distincts.Add((x, y));
                }
            }

        }

        return distincts.Count;
    }

    (int, int) GetStartPos(List<List<char>> l)
    {
        var fstInd = l.FindIndex(list => list.Contains('^'));
        var sndInd = l[fstInd].IndexOf('^');
        return (fstInd, sndInd);
    }

    bool IsStepInside(List<List<char>> l, (int x, int y) pos, string dir)
    {
        var move = dir switch
        {
            "UP" => (pos.x - 1, pos.y),
            "RIGHT" => (pos.x, pos.y + 1),
            "DOWN" => (pos.x + 1, pos.y),
            "LEFT" => (pos.x, pos.y - 1),
            _ => (pos.x, pos.y)
        };

        return move.Item1 >= 0 && move.Item1 < l.Count && move.Item2 >= 0 && move.Item2 < l[move.Item1].Count;
    }

    string ApplyRotationRule(string s)
        => s switch
        {
            "UP" => "RIGHT",
            "RIGHT" => "DOWN",
            "DOWN" => "LEFT",
            "LEFT" => "UP",
            _ => "Unkown"
        };

    /*
    var t = InputToList(input);
    var d = MoveAndTrackDistincts(t);
    Console.WriteLine($"Counts: {d}");
    */

    // Part 2
    bool IsStuck(List<List<char>> l)
    {
        HashSet<(int, int, string direction)> visited = []; // all pos
        Dictionary<(int, int), int> visitedCount = [];

        (var x, var y) = GetStartPos(l);

        string direction = "UP";

        visited.Add((x, y, direction)); // add start pos 

        bool isPresent = true;

        while (isPresent)
        {
            if (visited.Contains((x, y, direction)))
            {
                if (visitedCount.ContainsKey((x, y)))
                {
                    if (visitedCount[(x, y)] > 8) return true;
                    else visitedCount[(x, y)] = visitedCount[(x, y)] + 1;
                }
                else
                {
                    visitedCount.Add((x, y), 0);
                }
            }

            if (direction == "UP")
            {
                if (!IsStepInside(l, (x, y), direction)) break;

                if (l[(x - 1)][y] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    x -= 1;
                    if (!visited.Contains((x, y, direction))) visited.Add((x, y, direction));
                }
            }

            if (direction == "RIGHT")
            {
                if (!IsStepInside(l, (x, y), direction)) break;

                if (l[(x)][y + 1] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    y += 1;
                    if (!visited.Contains((x, y, direction))) visited.Add((x, y, direction));
                }
            }

            if (direction == "DOWN")
            {
                if (!IsStepInside(l, (x, y), direction)) break;


                if (l[(x + 1)][y] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    x += 1;
                    if (!visited.Contains((x, y, direction))) visited.Add((x, y, direction));
                }
            }

            if (direction == "LEFT")
            {
                if (!IsStepInside(l, (x, y), direction)) break;

                if (l[(x)][y - 1] == '#') direction = ApplyRotationRule(direction);
                else
                {
                    y -= 1;
                    if (!visited.Contains((x, y, direction))) visited.Add((x, y, direction));
                }
            }

        }

        return false;
    }

    int TotalLoops(List<List<char>> l)
    {
        HashSet<(int, int)> obstaclePos = [];
        (int x, int y) startPos = GetStartPos(l);
        var obstacles = FindObstacles(l); // Find all #

        int loopCount = 0;

        for (int y = 0; y < l.Count; y++)
        {
            for (int x = 0; x < l[y].Count; x++)
            {
                if (l[y][x] == '#' || (x == startPos.x && y == startPos.y))
                    continue;

                l[y][x] = '#';

                if (IsStuck(l))
                {
                    loopCount++;
                }

                l[y][x] = '.';
            }
        }

        return loopCount;
    }

    // find obstacles 
    List<(int, int)> FindObstacles(List<List<char>> lists)
    {
        List<(int, int)> pos = [];

        for (int i = 0; i < lists.Count; i++)
        {
            for (int j = 0; j < lists[i].Count; j++)
            {
                if (lists[i][j] == '#')
                {
                    pos.Add((i, j));
                }
            }
        }

        return pos;
    }

    /*
    var t = InputToList(input);
    List<(int, int)> obstacles = FindObstacles(t);
    var d = TotalLoops(t);
    Console.WriteLine($"Obstacles: {d}");
    */
}
